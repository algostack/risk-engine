 public static <T> List<List<T>> getPermutations(List<T> list, int mainListLevel, int subListLevel) {
        List<List<T>> result = new ArrayList<>();
        subListLevel = subListLevel-1;
        for (int i=0; i<mainListLevel && i<list.size(); i++) {
            final T currentLevel = list.get(i);
            result.add(ImmutableList.of(currentLevel));
            if (subListLevel > 0) {
                int j = i + 1;
                final List<List<T>> nextLevel = getPermutations(list.subList(j, list.size()), subListLevel);
                for (int k = 0; k < nextLevel.size(); k++) {
                    result.add(ImmutableList.<T>builder().add(currentLevel).addAll(nextLevel.get(k)).build());
                }
            }
        }
        return result;
    }
